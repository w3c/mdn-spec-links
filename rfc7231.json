{
    "header.accept-encoding": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept-Encoding.json",
            "name": "Accept-Encoding",
            "slug": "HTTP/Headers/Accept-Encoding",
            "summary": "The Accept-Encoding request HTTP header indicates the content encoding (usually a compression algorithm) that the client can understand. The server uses content negotiation to select one of the proposals and informs the client of that choice with the Content-Encoding response header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept-Encoding"
        }
    ],
    "header.accept-language": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept-Language.json",
            "name": "Accept-Language",
            "slug": "HTTP/Headers/Accept-Language",
            "summary": "The Accept-Language request HTTP header indicates the natural language and locale that the client prefers. The server uses content negotiation to select one of the proposals and informs the client of the choice with the Content-Language response header. Browsers set required values for this header according to their active user interface language. Users rarely change it, and such changes are not recommended because they may lead to fingerprinting.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept-Language"
        }
    ],
    "header.accept": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept.json",
            "name": "Accept",
            "slug": "HTTP/Headers/Accept",
            "summary": "The Accept request HTTP header indicates which content types, expressed as MIME types, the client is able to understand. The server uses content negotiation to select one of the proposals and informs the client of the choice with the Content-Type response header. Browsers set required values for this header based on the context of the request. For example, a browser uses different values in a request when fetches a CSS stylesheet, image, video, or a script.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true,
                    "notes": "In Firefox 66, the default <code>Accept</code> header value changed to <code>*/*</code>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept"
        }
    ],
    "header.content-encoding": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Encoding.json",
            "name": "Content-Encoding",
            "slug": "HTTP/Headers/Content-Encoding",
            "summary": "The Content-Encoding representation header lists any encodings that have been applied to the representation (message payload), and in what order. This lets the recipient know how to decode the representation in order to obtain the original payload format. Content encoding is mainly used to compress the message data without losing information about the origin media type.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Encoding"
        }
    ],
    "header.content-language": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Language.json",
            "name": "Content-Language",
            "slug": "HTTP/Headers/Content-Language",
            "summary": "The Content-Language representation header is used to describe the language(s) intended for the audience, so users can differentiate it according to their own preferred language.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Language"
        }
    ],
    "header.content-location": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Location.json",
            "name": "Content-Location",
            "slug": "HTTP/Headers/Content-Location",
            "summary": "The Content-Location header indicates an alternate location for the returned data. The principal use is to indicate the URL of a resource transmitted as the result of content negotiation.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Location"
        }
    ],
    "header.content-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Type.json",
            "name": "Content-Type",
            "slug": "HTTP/Headers/Content-Type",
            "summary": "The Content-Type representation header is used to indicate the original media type of the resource (prior to any content encoding applied for sending).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Type"
        }
    ],
    "header.date": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Date.json",
            "name": "Date",
            "slug": "HTTP/Headers/Date",
            "summary": "The Date general HTTP header contains the date and time at which the message originated.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Date"
        }
    ],
    "header.expect": [
        {
            "engines": [],
            "filename": "http/headers/Expect.json",
            "name": "Expect",
            "slug": "HTTP/Headers/Expect",
            "summary": "The Expect HTTP request header indicates expectations that need to be met by the server to handle the request successfully.",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": null
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "Expect"
        }
    ],
    "header.from": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/From.json",
            "name": "From",
            "slug": "HTTP/Headers/From",
            "summary": "The From request header contains an Internet email address for a human user who controls the requesting user agent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "From"
        }
    ],
    "header.location": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Location.json",
            "name": "Location",
            "slug": "HTTP/Headers/Location",
            "summary": "The Location response header indicates the URL to redirect a page to. It only provides a meaning when served with a 3xx (redirection) or 201 (created) status response.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Location"
        }
    ],
    "header.referer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Referer.json",
            "name": "Referer",
            "slug": "HTTP/Headers/Referer",
            "summary": "The Referer HTTP request header contains an absolute or partial address of the page that makes the request. The Referer header allows a server to identify a page where people are visiting it from. This data can be used for analytics, logging, optimized caching, and more.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Referer"
        }
    ],
    "header.retry-after": [
        {
            "engines": [],
            "filename": "http/headers/Retry-After.json",
            "name": "Retry-After",
            "slug": "HTTP/Headers/Retry-After",
            "summary": "The Retry-After response HTTP header indicates how long the user agent should wait before making a follow-up request. There are three main cases this header is used:",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/230260'>bug 230260</a>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "Retry-After"
        }
    ],
    "header.server": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Server.json",
            "name": "Server",
            "slug": "HTTP/Headers/Server",
            "summary": "The Server header describes the software used by the origin server that handled the request — that is, the server that generated the response.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Server"
        }
    ],
    "status.426": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "http/headers/Upgrade.json",
            "name": "Upgrade",
            "slug": "HTTP/Headers/Upgrade",
            "summary": "The HTTP 1.1 (only) Upgrade header can be used to upgrade an already established client/server connection to a different protocol (over the same transport protocol). For example, it can be used by a client to upgrade a connection from HTTP 1.1 to HTTP 2.0, or an HTTP or HTTPS connection into a WebSocket.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Upgrade"
        }
    ],
    "header.user-agent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/User-Agent.json",
            "name": "User-Agent",
            "slug": "HTTP/Headers/User-Agent",
            "summary": "The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "User-Agent"
        }
    ],
    "header.vary": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Vary.json",
            "name": "Vary",
            "slug": "HTTP/Headers/Vary",
            "summary": "The Vary HTTP response header describes the parts of the request message aside from the method and URL that influenced the content of the response it occurs in. Most often, this is used to create a cache key when content negotiation is in use.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Vary"
        }
    ],
    "CONNECT": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "CONNECT",
            "slug": "HTTP/Methods/CONNECT",
            "summary": "The HTTP CONNECT method starts two-way communications with the requested resource. It can be used to open a tunnel.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "CONNECT"
        }
    ],
    "DELETE": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "DELETE",
            "slug": "HTTP/Methods/DELETE",
            "summary": "The HTTP DELETE request method deletes the specified resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "DELETE"
        }
    ],
    "GET": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "GET",
            "slug": "HTTP/Methods/GET",
            "summary": "The HTTP GET method requests a representation of the specified resource. Requests using GET should only be used to request data (they shouldn't include data).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "GET"
        }
    ],
    "HEAD": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "HEAD",
            "slug": "HTTP/Methods/HEAD",
            "summary": "The HTTP HEAD method requests the headers that would be returned if the HEAD request's URL was instead requested with the HTTP GET method. For example, if a URL might produce a large download, a HEAD request could read its Content-Length header to check the filesize without actually downloading the file.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "HEAD"
        }
    ],
    "OPTIONS": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "OPTIONS",
            "slug": "HTTP/Methods/OPTIONS",
            "summary": "The HTTP OPTIONS method requests permitted communication options for a given URL or server. A client can specify a URL with this method, or an asterisk (*) to refer to the entire server.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "OPTIONS"
        }
    ],
    "POST": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "POST",
            "slug": "HTTP/Methods/POST",
            "summary": "The HTTP POST method sends data to the server. The type of the body of the request is indicated by the Content-Type header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "POST"
        }
    ],
    "PUT": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "PUT",
            "slug": "HTTP/Methods/PUT",
            "summary": "The HTTP PUT request method creates a new resource or replaces a representation of the target resource with the request payload.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "PUT"
        }
    ],
    "TRACE": [
        {
            "engines": [],
            "filename": "http/methods.json",
            "name": "TRACE",
            "slug": "HTTP/Methods/TRACE",
            "summary": "The HTTP TRACE method performs a message loop-back test along the path to the target resource, providing a useful debugging mechanism.",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": null
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "TRACE"
        }
    ],
    "status.100": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "100",
            "slug": "HTTP/Status/100",
            "summary": "The HTTP 100 Continue informational status response code indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "100 Continue"
        }
    ],
    "status.200": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "200",
            "slug": "HTTP/Status/200",
            "summary": "The HTTP 200 OK success status response code indicates that the request has succeeded. A 200 response is cacheable by default.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "200 OK"
        }
    ],
    "status.201": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "201",
            "slug": "HTTP/Status/201",
            "summary": "The HTTP 201 Created success status response code indicates that the request has succeeded and has led to the creation of a resource. The new resource is effectively created before this response is sent back and the new resource is returned in the body of the message, its location being either the URL of the request, or the content of the Location header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "201 Created"
        }
    ],
    "status.204": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "204",
            "slug": "HTTP/Status/204",
            "summary": "The HTTP 204 No Content success status response code indicates that a request has succeeded, but that the client doesn't need to navigate away from its current page.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "204 No Content"
        }
    ],
    "status.301": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "301",
            "slug": "HTTP/Status/301",
            "summary": "The HyperText Transfer Protocol (HTTP) 301 Moved Permanently redirect status response code indicates that the requested resource has been definitively moved to the URL given by the Location headers. A browser redirects to the new URL and search engines update their links to the resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "301 Moved Permanently"
        }
    ],
    "status.302": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "302",
            "slug": "HTTP/Status/302",
            "summary": "The HyperText Transfer Protocol (HTTP) 302 Found redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the Location header. A browser redirects to this page but search engines don't update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is not sent to the new URL).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "302 Found"
        }
    ],
    "status.303": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "303",
            "slug": "HTTP/Status/303",
            "summary": "The HyperText Transfer Protocol (HTTP) 303 See Other redirect status response code indicates that the redirects don't link to the requested resource itself, but to another page (such as a confirmation page, a representation of a real-world object — see HTTP range-14 — or an upload-progress page). This response code is often sent back as a result of PUT or POST. The method used to display this redirected page is always GET.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "303 See Other"
        }
    ],
    "status.307": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "307",
            "slug": "HTTP/Status/307",
            "summary": "The method and the body of the original request are reused to perform the redirected request. In the cases where you want the method used to be changed to GET, use 303 See Other instead. This is useful when you want to give an answer to a PUT method that is not the uploaded resources, but a confirmation message (like \"You successfully uploaded XYZ\").",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "307 Temporary Redirect"
        }
    ],
    "status.403": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "403",
            "slug": "HTTP/Status/403",
            "summary": "The HTTP 403 Forbidden response status code indicates that the server understands the request but refuses to authorize it.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "403 Forbidden"
        }
    ],
    "status.404": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "404",
            "slug": "HTTP/Status/404",
            "summary": "The HTTP 404 Not Found response status code indicates that the server cannot find the requested resource. Links that lead to a 404 page are often called broken or dead links and can be subject to link rot.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "404 Not Found"
        }
    ],
    "status.406": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "406",
            "slug": "HTTP/Status/406",
            "summary": "The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "406 Not Acceptable"
        }
    ],
    "status.409": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "409",
            "slug": "HTTP/Status/409",
            "summary": "The HTTP 409 Conflict response status code indicates a request conflict with the current state of the target resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "409 Conflict"
        }
    ],
    "status.410": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "410",
            "slug": "HTTP/Status/410",
            "summary": "The HyperText Transfer Protocol (HTTP) 410 Gone client error response code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "410 Gone"
        }
    ],
    "status.500": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "500",
            "slug": "HTTP/Status/500",
            "summary": "The HyperText Transfer Protocol (HTTP) 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "500 Internal Server Error"
        }
    ],
    "status.501": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "501",
            "slug": "HTTP/Status/501",
            "summary": "The HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "501 Not Implemented"
        }
    ],
    "status.502": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "502",
            "slug": "HTTP/Status/502",
            "summary": "The HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "502 Bad Gateway"
        }
    ],
    "status.503": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "503",
            "slug": "HTTP/Status/503",
            "summary": "The HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "503 Service Unavailable"
        }
    ],
    "status.504": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "504",
            "slug": "HTTP/Status/504",
            "summary": "The HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "504 Gateway Timeout"
        }
    ]
}
