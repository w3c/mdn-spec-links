{
    "dom-htmlmediaelement-setmediakeys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLMediaElement.json",
            "name": "setMediaKeys",
            "slug": "API/HTMLMediaElement/setMediaKeys",
            "summary": "The setMediaKeys() property of the HTMLMediaElement interface returns a Promise that resolves to the passed MediaKeys, which are those used to decrypt media during playback.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLMediaElement.setMediaKeys()"
        }
    ],
    "constructors": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyMessageEvent.json",
            "name": "MediaKeyMessageEvent",
            "slug": "API/MediaKeyMessageEvent/MediaKeyMessageEvent",
            "summary": "The MediaKeyMessageEvent constructor creates a new MediaKeyMessageEvent object.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyMessageEvent()"
        }
    ],
    "dom-mediakeymessageevent-message": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyMessageEvent.json",
            "name": "message",
            "slug": "API/MediaKeyMessageEvent/message",
            "summary": "The MediaKeyMessageEvent.message read-only property returns an ArrayBuffer with a message from the content decryption module. Messages vary by key system.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyMessageEvent.message"
        }
    ],
    "dom-mediakeymessageevent-messagetype": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyMessageEvent.json",
            "name": "messageType",
            "slug": "API/MediaKeyMessageEvent/messageType",
            "summary": "The MediaKeyMessageEvent.messageType read-only property indicates the type of message. It may be one of license-request, license-renewal, license-release, or individualization-request.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyMessageEvent.messageType"
        }
    ],
    "mediakeymessageevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyMessageEvent.json",
            "name": "MediaKeyMessageEvent",
            "slug": "API/MediaKeyMessageEvent",
            "summary": "The MediaKeyMessageEvent interface of the EncryptedMediaExtensions API contains the content and related data when the content decryption module generates a message for the session.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyMessageEvent"
        }
    ],
    "dom-mediakeysession-close": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "close",
            "slug": "API/MediaKeySession/close",
            "summary": "The MediaKeySession.close() method notifies that the current media session is no longer needed, and that the content decryption module should release any resources associated with this object and close it. Then, it returns a Promise.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.close()"
        }
    ],
    "dom-mediakeysession-closed": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "closed",
            "slug": "API/MediaKeySession/closed",
            "summary": "The MediaKeySession.closed read-only property returns a Promise signaling when a MediaKeySession closes. This promise can only be fulfilled and is never rejected. Closing a session means that licenses and keys associated with it are no longer valid for decrypting media data.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.closed"
        }
    ],
    "dom-mediakeysession-expiration": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "expiration",
            "slug": "API/MediaKeySession/expiration",
            "summary": "The MediaKeySession.expiration read-only property returns the time after which the keys in the current session can no longer be used to decrypt media data, or NaN if no such time exists. This value is determined by the CDM and measured in milliseconds since January 1, 1970, UTC. This value may change during a session lifetime, such as when an action triggers the start of a window.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.expiration"
        }
    ],
    "dom-mediakeysession-generaterequest": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "generateRequest",
            "slug": "API/MediaKeySession/generateRequest",
            "summary": "The MediaKeySession.generateRequest() method returns a Promise after generating a media request based on initialization data.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.generateRequest()"
        }
    ],
    "dom-mediakeysession-keystatuses": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "keyStatuses",
            "slug": "API/MediaKeySession/keyStatuses",
            "summary": "The MediaKeySession.keyStatuses read-only property returns a reference to a read-only MediaKeyStatusMap of the current session's keys and their statuses.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.keyStatuses"
        }
    ],
    "dom-mediakeysession-onkeystatuseschange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "keystatuseschange_event",
            "slug": "API/MediaKeySession/keystatuseschange_event",
            "summary": "The keystatuseschange event of the MediaKeySession API fires when there has been a change in the keys or their statuses within a session.",
            "support": {
                "chrome": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "42",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "42",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "42"
                    },
                    {
                        "version_added": "29",
                        "version_removed": "42",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "42"
                    },
                    {
                        "version_added": "29",
                        "version_removed": "42",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "6.0"
                    },
                    {
                        "version_added": "4.0",
                        "version_removed": "6.0",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "43",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onkeystatuseschange</code> event handler property is not supported."
                    }
                ]
            },
            "title": "MediaKeySession: keystatuseschange event"
        }
    ],
    "dom-mediakeysession-load": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "load",
            "slug": "API/MediaKeySession/load",
            "summary": "The MediaKeySession.load() method returns a Promise that resolves to a boolean value after loading data for a specified session object.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.load()"
        }
    ],
    "dom-mediakeysession-onmessage": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "message_event",
            "slug": "API/MediaKeySession/message_event",
            "summary": "The message event of the MediaKeySession interface fires when a message is generated by the content decryption module.",
            "support": {
                "chrome": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "42",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "42",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "42"
                    },
                    {
                        "version_added": "29",
                        "version_removed": "42",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "42"
                    },
                    {
                        "version_added": "29",
                        "version_removed": "42",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "6.0"
                    },
                    {
                        "version_added": "4.0",
                        "version_removed": "6.0",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "43",
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "55",
                        "partial_implementation": true,
                        "notes": "The <code>onmessage</code> event handler property is not supported."
                    }
                ]
            },
            "title": "MediaKeySession: message event"
        }
    ],
    "dom-mediakeysession-remove": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "remove",
            "slug": "API/MediaKeySession/remove",
            "summary": "The MediaKeySession.remove() method returns a Promise after removing any session data associated with the current object.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.remove()"
        }
    ],
    "dom-mediakeysession-sessionid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "sessionId",
            "slug": "API/MediaKeySession/sessionId",
            "summary": "The MediaKeySession.sessionId is a read-only property that contains a unique string generated by the content decryption module (CDM) for the current media object and its associated keys or licenses.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.sessionId"
        }
    ],
    "dom-mediakeysession-update": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "update",
            "slug": "API/MediaKeySession/update",
            "summary": "The MediaKeySession.update() method loads messages and licenses to the CDM, and then returns a Promise .",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession.update()"
        }
    ],
    "mediakeysession-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySession.json",
            "name": "MediaKeySession",
            "slug": "API/MediaKeySession",
            "summary": "The MediaKeySession interface of the EncryptedMediaExtensions API represents a context for message exchange with a content decryption module (CDM).",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySession"
        }
    ],
    "dom-mediakeystatusmap-get": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyStatusMap.json",
            "name": "get",
            "slug": "API/MediaKeyStatusMap/get",
            "summary": "The get property of the MediaKeyStatusMap interface returns the value associated with the given key, or undefined if there is none.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyStatusMap.get()"
        }
    ],
    "dom-mediakeystatusmap-has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyStatusMap.json",
            "name": "has",
            "slug": "API/MediaKeyStatusMap/has",
            "summary": "The has property of the MediaKeyStatusMap interface returns a Boolean, asserting whether a value has been associated with the given key.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyStatusMap.has()"
        }
    ],
    "dom-mediakeystatusmap-size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyStatusMap.json",
            "name": "size",
            "slug": "API/MediaKeyStatusMap/size",
            "summary": "The size read-only property of the MediaKeyStatusMap interface returns the number of key/value paIrs in the status map.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyStatusMap.size"
        }
    ],
    "mediakeystatusmap-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeyStatusMap.json",
            "name": "MediaKeyStatusMap",
            "slug": "API/MediaKeyStatusMap",
            "summary": "The MediaKeyStatusMap interface of the EncryptedMediaExtensions API is a read-only map of media key statuses by key IDs.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeyStatusMap"
        }
    ],
    "dom-mediakeysystemaccess-createmediakeys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySystemAccess.json",
            "name": "createMediaKeys",
            "slug": "API/MediaKeySystemAccess/createMediaKeys",
            "summary": "The MediaKeySystemAccess.createMediaKeys() method returns a Promise that resolves to a new MediaKeys object.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySystemAccess.createMediaKeys()"
        }
    ],
    "dom-mediakeysystemaccess-getconfiguration": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySystemAccess.json",
            "name": "getConfiguration",
            "slug": "API/MediaKeySystemAccess/getConfiguration",
            "summary": "The MediaKeySystemAccess.getConfiguration() method returns an object with the supported combination of the following configuration options:",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "43",
                    "notes": "Before Firefox 50, the returned object has neither a <code>distinctiveIdentifier</code> nor a <code>persistentState</code> property."
                },
                "firefox_android": {
                    "version_added": "43",
                    "notes": "Before Firefox 50, the returned object has neither a <code>distinctiveIdentifier</code> nor a <code>persistentState</code> property."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySystemAccess.getConfiguration()"
        }
    ],
    "dom-mediakeysystemaccess-keysystem": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySystemAccess.json",
            "name": "keySystem",
            "slug": "API/MediaKeySystemAccess/keySystem",
            "summary": "The MediaKeySystemAccess.keySystem read-only property returns a DOMString identifying the key system being used.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySystemAccess.keySystem"
        }
    ],
    "mediakeysystemaccess-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeySystemAccess.json",
            "name": "MediaKeySystemAccess",
            "slug": "API/MediaKeySystemAccess",
            "summary": "The MediaKeySystemAccess interface of the EncryptedMediaExtensions API provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the Navigator.requestMediaKeySystemAccess() method.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeySystemAccess"
        }
    ],
    "dom-mediakeys-createsession": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeys.json",
            "name": "createSession",
            "slug": "API/MediaKeys/createSession",
            "summary": "The MediaKeys.createSession() method returns a new MediaKeySession object, which represents a context for message exchange with a content decryption module (CDM).",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeys.createSession()"
        }
    ],
    "dom-mediakeys-setservercertificate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeys.json",
            "name": "setServerCertificate",
            "slug": "API/MediaKeys/setServerCertificate",
            "summary": "The MediaKeys.setServerCertificate() method provides a server certificate to be used to encrypt messages to the license server.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeys.setServerCertificate()"
        }
    ],
    "mediakeys-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaKeys.json",
            "name": "MediaKeys",
            "slug": "API/MediaKeys",
            "summary": "The MediaKeys interface of EncryptedMediaExtensions API represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaKeys"
        }
    ],
    "navigator-extension-requestmediakeysystemaccess": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Navigator.json",
            "name": "requestMediaKeySystemAccess",
            "slug": "API/Navigator/requestMediaKeySystemAccess",
            "summary": "The Navigator.requestMediaKeySystemAccess() method returns a Promise which delivers a MediaKeySystemAccess object that can be used to access a particular media key system, which can in turn be used to create keys for decrypting a media stream. This method is part of the Encrypted Media Extensions API, which brings support for encrypted media and DRM-protected video to the web.",
            "support": {
                "chrome": {
                    "version_added": "42",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Chrome 58."
                    ]
                },
                "chrome_android": {
                    "version_added": "42",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Chrome 58."
                    ]
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38",
                    "notes": [
                        "Starting in Firefox 55, if neither <code>audioCapabilities</code> nor <code>videoCapabilities</code> is specified in <code>supportedConfigurations</code>, a warning is output to the web console.",
                        "In addition, starting in Firefox 55, if in <code>supportedConfigurations</code>, either <code>audioCapabilities</code>'s or <code>videoCapabilities</code>'s <code>contentType</code> value doesn't specify a <code>\"codecs\"</code> substring to define allowed codecs within the media wrapper, a warning is output to the web console. See note below table for example and correction.",
                        "In the future, if neither <code>audioCapabilities</code> nor <code>videoCapabilities</code> is specified in the <code>supportedConfigurations</code>, a <code>NotSupported</code> exception will be thrown."
                    ]
                },
                "firefox_android": {
                    "version_added": "38",
                    "notes": [
                        "Starting in Firefox 55, if neither <code>audioCapabilities</code> nor <code>videoCapabilities</code> is specified in <code>supportedConfigurations</code>, a warning is output to the web console.",
                        "In addition, starting in Firefox 55, if in <code>supportedConfigurations</code>, either <code>audioCapabilities</code>'s or <code>videoCapabilities</code>'s <code>contentType</code> value doesn't specify a <code>\"codecs\"</code> substring to define allowed codecs within the media wrapper, a warning is output to the web console. See note below table for example and correction.",
                        "In the future, if neither <code>audioCapabilities</code> nor <code>videoCapabilities</code> is specified in the <code>supportedConfigurations</code>, a <code>NotSupported</code> exception will be thrown."
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "29",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Opera 45."
                    ]
                },
                "opera_android": {
                    "version_added": "29",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Opera 45."
                    ]
                },
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": {
                    "version_added": "13.4"
                },
                "samsunginternet_android": {
                    "version_added": "4.0",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Samsung Internet 7.0."
                    ]
                },
                "webview_android": {
                    "version_added": "43",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until version 58."
                    ]
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": [
                        "The spec requires that the passed <code>supportedConfigurations</code> option contain at least one of <code>audioCapabilities</code> or <code>videoCapabilities</code>, and that said parameters include a codec string.",
                        "The function does not exist in insecure contexts. This was not enforced until Chrome 58."
                    ]
                }
            },
            "title": "Navigator.requestMediaKeySystemAccess()"
        }
    ],
    "permissions-policy-integration": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "encrypted-media",
            "slug": "HTTP/Headers/Feature-Policy/encrypted-media",
            "summary": "The HTTP Feature-Policy header encrypted-media directive controls whether the current document is allowed to use the Encrypted Media Extensions API (EME). When this policy is enabled, the Promise returned by Navigator.requestMediaKeySystemAccess() will reject with a DOMException.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": {
                    "version_added": "60"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "60"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: encrypted-media"
        }
    ]
}
